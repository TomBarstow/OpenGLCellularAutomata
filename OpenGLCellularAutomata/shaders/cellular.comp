#version 430

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, r32ui) uniform readonly uimage2D inputImage;
layout(binding = 1, r32ui) uniform writeonly uimage2D outputImage;

void main() {
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(inputImage);
    
    if (coord.x >= size.x || coord.y >= size.y) return;
    
    // Count living neighbors (Conway's Game of Life rules)
    int neighbors = 0;
    for (int dx = -1; dx <= 1; dx++) {
        for (int dy = -1; dy <= 1; dy++) {
            if (dx == 0 && dy == 0) continue;
            
            ivec2 neighborCoord = coord + ivec2(dx, dy);
            
            // Wrap around edges (toroidal topology)
            neighborCoord.x = (neighborCoord.x + size.x) % size.x;
            neighborCoord.y = (neighborCoord.y + size.y) % size.y;
            
            uint neighborValue = imageLoad(inputImage, neighborCoord).r;
            if (neighborValue > 0u) neighbors++;
        }
    }
    
    uint currentState = imageLoad(inputImage, coord).r;
    uint newState = 0u;
    
    // Conway's Game of Life rules
    if (currentState > 0u) {
        // Cell is alive
        if (neighbors == 2 || neighbors == 3) {
            newState = 1u;
        }
    } else {
        // Cell is dead
        if (neighbors == 3) {
            newState = 1u;
        }
    }
    
    imageStore(outputImage, coord, uvec4(newState));
}